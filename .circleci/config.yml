version: 2.1

# Set up the environment variables
# update the website
# make the homebrew zip folder
# make the changelog
# make the debian file
# update the readme
# pull the checksum version
# push the new checksum to the repo master branch

orbs:
  aws-cli: airswap/aws-cli@volatile

references:
  container_config: &container_config
    docker:
      - image: cimg/base:2020.01
    working_directory: ~/repo

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

jobs:
  checkout_code:
    <<: *container_config
    steps:
      - checkout:
          path: ~/repo
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  change_website:
    <<: *container_config
    steps:
      - *restore_repo
      - aws-cli/install
      - run:
          name: Change the website
          command: |
            # version swap the website
            VERSION=$(head -1 $(pwd)/VERSION)
            sudo apt-get -y install gettext-base
            envsubst < website/index.template.html > website/index.html
            aws s3 sync ./website s3://aws-rotate-iam-keys.com --delete --dryrun
            aws s3 cp ./Windows/aws-rotate-iam-keys.ps1 s3://aws-rotate-iam-keys.com/aws-rotate-iam-keys.ps1 --dryrun

  build:
    <<: *container_config
    steps:
      - *restore_repo
      - aws-cli/install
      - run:
          name: Build the .deb package
          command: |
            export VERSION=$(head -1 $(pwd)/VERSION)
            # make the dist folder
            mkdir -p dist
            # copy in the src and swap the versions
            cp -r src/** dist/
            sed "s/<%VERSION%>/$VERSION/g" src/bin/aws-rotate-iam-keys > dist/bin/aws-rotate-iam-keys

            CHANGES="aws-rotate-iam-keys_${VERSION}_source.changes"

            zip -r aws-rotate-iam-keys_${VERSION}.zip dist

            # make the changelog
            cd dist
            sudo apt-get update
            sudo apt-get -y install devscripts build-essential dh-make debhelper
            DEBEMAIL="Adam Link <aws-rotate-iam-keys@rhyeal.com>" DEBFULLNAME="Adam Link" dch -v $VERSION --distribution bionic --force-distribution "See release notes on GitHub"

            mv debian DEBIAN
            envsubst < DEBIAN/control-debian > DEBIAN/control

            # make the Debian .deb
            dpkg-deb --build . ../aws-rotate-iam-keys.${VERSION}.deb

            rm DEBIAN/control
            mv DEBIAN debian
            envsubst < debian/control-ubuntu > debian/control

            # make unsigned changes
            DEBEMAIL="Adam Link <aws-rotate-iam-keys@rhyeal.com>" DEBFULLNAME="Adam Link" debuild -S -sa -us -uc

            # let's grab that signing key now
            aws s3 cp s3://rhyeal-ppa-signing-keys/my_secret_signing_key.asc ~/my_secret_signing_key.asc
            gpg --import ~/my_secret_signing_key.asc
            debsign -k 008A79BDFBCF3348 ${CHANGES}

            cd ..
            dput ppa:rhyeal/aws-rotate-iam-keys $CHANGES
            #cp dist/debian/changelog src/debian/changelog
            #rm -rf dist

            # update the readme
            export WIN_MD5=$(md5sum Windows/aws-rotate-iam-keys.ps1)
            export LINUX_MD5=$(md5sum aws-rotate-iam-keys.${VERSION}.deb | cut -c 1-32)
            envsubst < README.template.md > README.md

            # put the .zip, the .tar.gz, the .deb, and the README.md back to GH
            git add *${VERSION}.deb
            git add *${VERSION}.zip
            git add *${VERSION}.tar.gz
            git add README.md

            # [ci skip] to message
            git commit -m "[ci skip] adding built files from CI server"

      - persist_to_workspace:
          root: ~/repo
          paths: .


  test:
    <<: *container_config
    steps:
      - *restore_repo

  release:
    <<: *container_config
    steps:
      - *restore_repo

workflows:
  build_and_deploy:
    jobs:
      - checkout_code
      - build:
          context: Personal_AWS
          requires:
            - checkout_code
      # - test:
      #     context: Personal_AWS
      #     requires:
      #       - build
      # - release:
      #     context: Personal_AWS
      #     requires:
      #       - test
      #     filters:
      #         tags:
      #           only: /^v.*/
      #         branches:
      #           ignore: /.*/
      - change_website:
          context: Personal_AWS
          requires:
            - checkout_code
          filters:
            branches:
              only:
                - circleci-take2
