#!/usr/bin/env bash

# Assign the arguments to variables
for arg in "$@"
do
case $arg in
    -p|--profiles|--profile)
    PROFILES="$2"
    ;;
    --version)
    echo "AWS Rotate IAM Keys (c) 2018 Adam Link"
    echo "version 0.2.5"
    exit 0
    ;;
esac
done

# Set the profile to default if nothing sent via CLI
if [[ -z "$1" ]]; then
	PROFILES=default
fi

set -f                      # avoid globbing (expansion of *).
PROFILES_ARR=(${PROFILES//,/ })
FIRST_PROFILE=${PROFILES_ARR[0]}

CURRENT_KEY_ID=$(aws iam list-access-keys --output json --profile $FIRST_PROFILE | jq '.AccessKeyMetadata[0].AccessKeyId' | tr -d '"' || exit 1)

# Make a new key
echo "Making new access key"
RESPONSE=$(aws iam create-access-key --profile $FIRST_PROFILE | jq .AccessKey)
ACCESS_KEY=$(echo $RESPONSE | jq '.AccessKeyId' | tr -d '"')
SECRET=$(echo $RESPONSE | jq '.SecretAccessKey' | tr -d '"')
aws iam delete-access-key --access-key-id $CURRENT_KEY_ID --profile ${PROFILES_ARR[i]}

# Rotate the keys in the credentials file for all profiles
for i in "${!PROFILES_ARR[@]}"
do
    echo "Updating profile: ${PROFILES_ARR[i]}"
    aws configure set aws_access_key_id $ACCESS_KEY --profile ${PROFILES_ARR[i]}
    aws configure set aws_secret_access_key $SECRET --profile ${PROFILES_ARR[i]}
done

echo "Made new key $ACCESS_KEY"
echo "Key rotated"
exit 0
